{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Square","index","value","onClick","className","Board","squares","map","square","Game","useState","Array","fill","blocks","setBlocks","xIsNext","setxIsNext","stepNum","setStepNum","winner","lines","i","length","a","b","c","calculateWinner","history","slice","current","na","oa","handleClick","step","move","jumpTo","ReactDom","render","document","getElementById"],"mappings":"6KAUeA,EARA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QAC9B,OACE,wBAAQC,UAAU,WAAWD,QAAS,kBAAMA,EAAQF,IAApD,SACGC,KCaQG,EAfD,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASH,EAAc,EAAdA,QACxB,OACE,qBAAKC,UAAU,OAAf,SACGE,EAAQC,KAAI,SAACC,EAAQP,GAAT,OACX,cAAC,EAAD,CAEEA,MAAOA,EACPC,MAAOM,EACPL,QAAS,SAACF,GAAD,OAAWE,EAAQF,KAHvBA,SC8DAQ,MAnEF,WAAO,IAAD,EACWC,mBAAS,CAACC,MAAM,GAAGC,KAAK,MADnC,mBACVC,EADU,KACFC,EADE,OAEaJ,oBAAS,GAFtB,mBAEVK,EAFU,KAEDC,EAFC,OAGaN,mBAAS,GAHtB,mBAGVO,EAHU,KAGDC,EAHC,KAIXC,EA2CR,SAAyBb,GAWvB,IAVA,IAAMc,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAC,IAAD,cACnBD,EAAMC,GADa,GAC9BE,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAInB,EAAQiB,IAAMjB,EAAQiB,KAAOjB,EAAQkB,IAAMlB,EAAQiB,KAAOjB,EAAQmB,GACpE,OAAOnB,EAAQiB,GAGnB,OAAO,KA5DQG,CAAgBb,EAAOI,IAEhCf,EAAQa,EAAU,IAAM,IAkB9B,OACE,sBAAKX,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,uCACA,cAAC,EAAD,CACEE,QAASO,EAAOI,GAChBd,QAAS,SAACF,GAAD,OArBK,SAACA,GACnB,IAAM0B,EAAUd,EAAOe,MAAM,EAAGX,EAAU,GACpCY,EAAUF,EAAQV,GACxB,IAAIE,IAAUU,EAAQ5B,GAAtB,CACA,IAAI6B,EAAE,YAAOD,GACbC,EAAG7B,GAASC,EAEZY,GAAU,SAACiB,GAAD,4BAAYJ,GAAZ,CAAqBG,OAC/BZ,EAAWS,EAAQL,QACnBN,GAAYD,IAYYiB,CAAY/B,MAElC,oBAAIG,UAAU,UAAd,SACGe,EAAS,WAAaA,EAAS,gBAAkBjB,IAEpD,6BACGW,EAAON,KAAI,SAAC0B,EAAMC,GAAP,OACV,6BACE,wBAAQ9B,UAAU,WAAWD,QAAS,kBAjBjC,SAAC8B,GACdf,EAAWe,GACXjB,EAAWiB,EAAO,IAAM,GAe4BE,CAAOD,IAAnD,SACGA,EAAO,eAAiBA,EAAO,sBAF3BA,YClCnBE,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.c2738f69.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Square = ({ index, value, onClick }) => {\n  return (\n    <button className=\"button-1\" onClick={() => onClick(index)}>\n      {value}\n    </button>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"./Square\";\n\nconst Board = ({ squares, onClick }) => {\n  return (\n    <div className=\"grid\">\n      {squares.map((square, index) => (\n        <Square\n          key={index}\n          index={index}\n          value={square}\n          onClick={(index) => onClick(index)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Board;\n","import React, { useState } from \"react\";\nimport Board from \"./Board\";\n\nconst Game = () => {\n  const [blocks, setBlocks] = useState([Array(9).fill(\"\")]);\n  const [xIsNext, setxIsNext] = useState(true);\n  const [stepNum, setStepNum] = useState(0);\n  const winner = calculateWinner(blocks[stepNum]);\n\n  const value = xIsNext ? \"X\" : \"O\";\n\n  const handleClick = (index) => {\n    const history = blocks.slice(0, stepNum + 1);\n    const current = history[stepNum];\n    if (winner || current[index]) return;\n    let na = [...current];\n    na[index] = value;\n\n    setBlocks((oa) => [...history, na]);\n    setStepNum(history.length);\n    setxIsNext(!xIsNext);\n  };\n\n  const jumpTo = (step) => {\n    setStepNum(step);\n    setxIsNext(step % 2 === 0);\n  };\n  return (\n    <div className=\"container\">\n      <h1 className=\"heading\">T3 - The Best Tic Tac Toe</h1>\n      <Board\n        squares={blocks[stepNum]}\n        onClick={(index) => handleClick(index)}\n      />\n      <h1 className=\"heading\">\n        {winner ? \"Winner: \" + winner : \"Next Player: \" + value}\n      </h1>\n      <ul>\n        {blocks.map((step, move) => (\n          <li key={move}>\n            <button className=\"button-2\" onClick={() => jumpTo(move)}>\n              {move ? \"Go to move #\" + move : \"Go to game start\"}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport default Game;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./components/Game\";\n\nReactDom.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}